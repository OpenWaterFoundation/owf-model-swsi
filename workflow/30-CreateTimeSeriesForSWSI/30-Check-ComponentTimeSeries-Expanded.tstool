#
RemoveFile(InputFile="TimeSeriesChecks.xlsx",IfNotFound=Ignore)
#
# Read the start and end dates for the historical period, recent period, current period, and current month
ReadPropertiesFromExcel(InputFile="..\CO-SWSI-Control.xlsx",Worksheet="Config",PropertyCellMap="HistoricalPeriodStartDateText:*,HistoricalPeriodEndDateText:*,RecentPeriodStartDateText:*, RecentPeriodEndDateText:*")
ReadPropertiesFromExcel(InputFile="..\CO-SWSI-Control.xlsx",Worksheet="Config",PropertyCellMap="CurrentWaterYearStartDateText:*,PreviousMonthDateText:*,CurrentMonthDateText:*,RecentPeriodFlowType:*")
#
# Read the component data time series
SetInputPeriod(InputStart="${HistoricalPeriodStartDateText}",InputEnd="${CurrentMonthDateText}")
ReadDateValue(InputFile="..\Input-TimeSeries-ForSWSI\PrevMoStreamflow\SWSI-Component-PrevMoStreamflow.dv")
ReadDateValue(InputFile="..\Input-TimeSeries-ForSWSI\ReservoirStorage\SWSI-Component-ReservoirStorage.dv")
ReadDateValue(InputFile="..\Input-TimeSeries-ForSWSI\ForecastedRunoff\SWSI-Component-ForecastedRunoff.dv")
#
# Assign data type as a time series property
SetTimeSeriesProperty(TSList=AllMatchingTSID,TSID="*-Component-PrevMoStreamflow",PropertyName="dataType",PropertyType=String,PropertyValue="PrevMoStreamflow")
SetTimeSeriesProperty(TSList=AllMatchingTSID,TSID="*-Component-ReservoirStorage",PropertyName="dataType",PropertyType=String,PropertyValue="ReservoirStorage")
SetTimeSeriesProperty(TSList=AllMatchingTSID,TSID="*-Component-ForecastedRunoff",PropertyName="dataType",PropertyType=String,PropertyValue="ForecastedRunoff")
##############################################################################################################################
# Summarize missing counts by data type and periods
##############################################################################################################################
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-PrevMoStreamflow",Statistic="MissingCount",AnalysisStart="${HistoricalPeriodStartDateText}",AnalysisEnd="${HistoricalPeriodEndDateText}",AnalysisWindowStart="07",AnalysisWindowEnd="09",TimeSeriesProperty="MissingCount_HistPeriod")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-PrevMoStreamflow",Statistic="MissingCount",AnalysisStart="${RecentPeriodStartDateText}",AnalysisEnd="${RecentPeriodEndDateText}",AnalysisWindowStart="07",AnalysisWindowEnd="09",TimeSeriesProperty="MissingCount_RecentPeriod")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-PrevMoStreamflow",Statistic="MissingCount",AnalysisStart="${CurrentWaterYearStartDateText}",AnalysisEnd="${PreviousMonthDateText}",AnalysisWindowStart="07",AnalysisWindowEnd="09",TimeSeriesProperty="MissingCount_CurrentWY")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-PrevMoStreamflow",Statistic="MissingCount",AnalysisStart="${CurrentMonthDateText}",AnalysisEnd="${CurrentMonthDateText}",AnalysisWindowStart="07",AnalysisWindowEnd="09",TimeSeriesProperty="MissingCount_CurrentMonth")
#
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-ForecastedRunoff",Statistic="MissingCount",AnalysisStart="${HistoricalPeriodStartDateText}",AnalysisEnd="${HistoricalPeriodEndDateText}",AnalysisWindowStart="01",AnalysisWindowEnd="06",TimeSeriesProperty="MissingCount_HistPeriod")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-ForecastedRunoff",Statistic="MissingCount",AnalysisStart="${RecentPeriodStartDateText}",AnalysisEnd="${RecentPeriodEndDateText}",AnalysisWindowStart="01",AnalysisWindowEnd="06",TimeSeriesProperty="MissingCount_RecentPeriod")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-ForecastedRunoff",Statistic="MissingCount",AnalysisStart="${CurrentWaterYearStartDateText}",AnalysisEnd="${PreviousMonthDateText}",AnalysisWindowStart="01",AnalysisWindowEnd="06",TimeSeriesProperty="MissingCount_CurrentWY")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-ForecastedRunoff",Statistic="MissingCount",AnalysisStart="${CurrentMonthDateText}",AnalysisEnd="${CurrentMonthDateText}",AnalysisWindowStart="01",AnalysisWindowEnd="06",TimeSeriesProperty="MissingCount_CurrentMonth")
#
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-ReservoirStorage",Statistic="MissingCount",AnalysisStart="${HistoricalPeriodStartDateText}",AnalysisEnd="${HistoricalPeriodEndDateText}",TimeSeriesProperty="MissingCount_HistPeriod")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-ReservoirStorage",Statistic="MissingCount",AnalysisStart="${RecentPeriodStartDateText}",AnalysisEnd="${RecentPeriodEndDateText}",TimeSeriesProperty="MissingCount_RecentPeriod")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-ReservoirStorage",Statistic="MissingCount",AnalysisStart="${CurrentWaterYearStartDateText}",AnalysisEnd="${PreviousMonthDateText}",TimeSeriesProperty="MissingCount_CurrentWY")
CalculateTimeSeriesStatistic(TSList=AllMatchingTSID,TSID="*-Component-ReservoirStorage",Statistic="MissingCount",AnalysisStart="${CurrentMonthDateText}",AnalysisEnd="${CurrentMonthDateText}",TimeSeriesProperty="MissingCount_CurrentMonth")
#
# Create output tables with data check results
CopyTimeSeriesPropertiesToTable(TSList=AllMatchingTSID,TSID="*-Component-PrevMoStreamflow",IncludeProperties="stationId,stationName,dataType,MissingCount_HistPeriod,MissingCount_RecentPeriod,MissingCount_CurrentWY,MissingCount_CurrentMonth",TableID="DataChecks_PrevMoStreamflow",TableTSIDColumn="stationID")
SortTable(TableID="DataChecks_PrevMoStreamflow",SortColumns="MissingCount_HistPeriod,MissingCount_CurrentMonth",SortOrder=""MissingCount_HistPeriod:Descending,MissingCount_CurrentMonth:Descending"")
#
CopyTimeSeriesPropertiesToTable(TSList=AllMatchingTSID,TSID="*-Component-ForecastedRunoff",IncludeProperties="stationId,stationName,dataType,MissingCount_HistPeriod,MissingCount_RecentPeriod,MissingCount_CurrentWY,MissingCount_CurrentMonth",TableID="DataChecks_ForecastedRunoff",TableTSIDColumn="stationID")
SortTable(TableID="DataChecks_ForecastedRunoff",SortColumns="MissingCount_HistPeriod,MissingCount_CurrentMonth",SortOrder=""MissingCount_HistPeriod:Descending,MissingCount_CurrentMonth:Descending"")
#
CopyTimeSeriesPropertiesToTable(TSList=AllMatchingTSID,TSID="*-Component-ReservoirStorage",IncludeProperties="stationId,stationName,dataType,MissingCount_HistPeriod,MissingCount_RecentPeriod,MissingCount_CurrentWY,MissingCount_CurrentMonth",TableID="DataChecks_ReservoirStorage",TableTSIDColumn="stationID")
SortTable(TableID="DataChecks_ReservoirStorage",SortColumns="MissingCount_HistPeriod,MissingCount_CurrentMonth",SortOrder=""MissingCount_HistPeriod:Descending,MissingCount_CurrentMonth:Descending"")
#
# Write the output to an Excel workbook
NewExcelWorkbook(OutputFile="TimeSeriesChecks.xlsx",Worksheets="PrevMoStreamflow,ReservoirStorage,ForecastedRunoff,Missing Value List",KeepOpen=True)
#
# The following tables are used to apply conditional formatting in Excel to highlight where values are missing.
ReadTableFromExcel(TableID="StyleTable",InputFile="..\CO-SWSI-Control.xlsx",Worksheet="Lookup Tables",ExcelNamedRange="RawDataChecksStyleTable",ExcelColumnNames=FirstRowInRange,ReadAllAsText=True)
ReadTableFromExcel(TableID="ConditionTable",InputFile="..\CO-SWSI-Control.xlsx",Worksheet="Lookup Tables",ExcelNamedRange="RawDataChecksConditionTable",ExcelColumnNames=FirstRowInRange,ReadAllAsText=True)
#
WriteTableToExcel(TableID="DataChecks_PrevMoStreamflow",OutputFile="TimeSeriesChecks.xlsx",Worksheet="PrevMoStreamflow",ExcelAddress="A1",ExcelColumnNames=FirstRowInRange,KeepOpen=True,ColumnWidths="Default:Auto",ConditionTableID="ConditionTable",StyleTableID="StyleTable")
WriteTableToExcel(TableID="DataChecks_ForecastedRunoff",OutputFile="TimeSeriesChecks.xlsx",Worksheet="ForecastedRunoff",ExcelAddress="A1",ExcelColumnNames=FirstRowInRange,KeepOpen=True,ColumnWidths="Default:Auto",ConditionTableID="ConditionTable",StyleTableID="StyleTable")
WriteTableToExcel(TableID="DataChecks_ReservoirStorage",OutputFile="TimeSeriesChecks.xlsx",Worksheet="ReservoirStorage",ExcelAddress="A1",ExcelColumnNames=FirstRowInRange,KeepOpen=True,ColumnWidths="Default:Auto",ConditionTableID="ConditionTable",StyleTableID="StyleTable")
##############################################################################################################################
# Write out a list of all missing value dates
##############################################################################################################################
#
NewTable(TableID="Data_Check_Summary_Table",Columns="TS_Alias,string;stationId,string;stationName,string;Date,string")
CheckTimeSeries(TSList=AllMatchingTSID,TSID="*-Component-PrevMoStreamflow",CheckCriteria="Missing",Flag="M",FlagDesc="Missing",AnalysisStart="${HistoricalPeriodStartDateText}",AnalysisEnd="${CurrentMonthDateText}",AnalysisWindowStart="07",AnalysisWindowEnd="09",TableID="Data_Check_Summary_Table",TableTSIDColumn="TS_Alias",TableTSIDFormat="%A",TableDateTimeColumn="Date")
CheckTimeSeries(TSList=AllMatchingTSID,TSID="*-Component-ForecastedRunoff",CheckCriteria="Missing",Flag="M",FlagDesc="Missing",AnalysisStart="${HistoricalPeriodStartDateText}",AnalysisEnd="${CurrentMonthDateText}",AnalysisWindowStart="01",AnalysisWindowEnd="06",TableID="Data_Check_Summary_Table",TableTSIDColumn="TS_Alias",TableTSIDFormat="%A",TableDateTimeColumn="Date")
CheckTimeSeries(TSList=AllMatchingTSID,TSID="*-Component-ReservoirStorage",CheckCriteria="Missing",Flag="M",FlagDesc="Missing",AnalysisStart="${HistoricalPeriodStartDateText}",AnalysisEnd="${CurrentMonthDateText}",TableID="Data_Check_Summary_Table",TableTSIDColumn="TS_Alias",TableTSIDFormat="%A",TableDateTimeColumn="Date")
#
# Copy table to get row count property to check number of missing values
CopyTable(TableID="Data_Check_Summary_Table",NewTableID="Data_Check_Count_Table",RowCountProperty="MissingCount_Total")
#
If(Name="MissingCount_Total>0",Condition="${MissingCount_Total}>0",CompareAsStrings=False)
#
For(Name="DataCheckLoop",IteratorProperty="StationAlias",TableID="Data_Check_Summary_Table",TableColumn="TS_Alias")
CopyTimeSeriesPropertiesToTable(TSList=AllMatchingTSID,TSID="${StationAlias}",IncludeProperties="stationId,stationName",TableID="Data_Check_Summary_Table_Properties",TableTSIDColumn="TS_Alias",TableTSIDFormat="%A",AllowDuplicates="True",TableOutputColumns="stationId,stationName")
EndFor(Name="DataCheckLoop")
#
# The Join command links the tables so that station ID and station Name can also be written out.
JoinTables(TableID="Data_Check_Summary_Table",TableToJoinID="Data_Check_Summary_Table_Properties",JoinColumns="TS_Alias:TS_Alias",JoinMethod=JoinIfInBoth,HandleMultipleJoinMatchesHow=UseLastMatch)
SortTable(TableID="Data_Check_Summary_Table",SortColumns="Date",SortOrder="Date:Descending")
#
EndIf(Name="MissingCount_Total>0")
#
WriteTableToExcel(TableID="Data_Check_Summary_Table",IncludeColumns="TS_Alias,stationId,stationName,Date",OutputFile="TimeSeriesChecks.xlsx",Worksheet="Missing Value List",ExcelAddress="A1",ExcelColumnNames=FirstRowInRange,KeepOpen=False,ColumnWidths="Default:Auto")
